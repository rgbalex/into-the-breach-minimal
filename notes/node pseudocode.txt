tree = new Node()
tree.state = board.state
tree.score = evaluate(board.state)
current_node = tree

while depth > 0 do
	for next_state in board.state.get_available_moves() do 
		current_node.childeren[next_state] = evaluate(next_state)
	end for 




class Node:
	int 	depth = -1
	float 	score = -INF
	list 	state = []

	def ctor(state, depth)
		this.score = evaluate(this.state)
		#build childeren here
	end func


func build_tree(node, depth)
	for next_state in board.state.get_available_moves() do 
		node.childeren += new Node(next_state, depth-1)
	end for 
end func